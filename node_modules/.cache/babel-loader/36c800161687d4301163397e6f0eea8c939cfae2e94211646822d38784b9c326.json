{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaognev/Desktop/honey/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { UserRole } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Моковые данные для демонстрации\nconst mockUsers = [{\n  id: '1',\n  name: 'Администратор',\n  email: 'admin@newformat.ru',\n  role: UserRole.ADMIN,\n  isActive: true,\n  createdAt: new Date()\n}, {\n  id: '2',\n  name: 'Мария Сидорова',\n  email: 'promoter@newformat.ru',\n  role: UserRole.PROMOTER,\n  locationId: 'loc1',\n  phone: '+7 999 765 43 21',\n  isActive: true,\n  createdAt: new Date()\n}, {\n  id: '3',\n  name: 'ООО Медовый Дом',\n  email: 'supplier@newformat.ru',\n  role: UserRole.SUPPLIER,\n  isActive: true,\n  createdAt: new Date()\n}];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Проверяем сохраненную сессию\n    const savedUser = localStorage.getItem('newformat_user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Ошибка при загрузке пользователя:', error);\n        localStorage.removeItem('newformat_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    setIsLoading(true);\n\n    // Имитация задержки сети\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Простая проверка пароля (в реальном приложении будет API)\n    const foundUser = mockUsers.find(u => u.email === email);\n    if (foundUser && password === '123456') {\n      // Простой пароль для демо\n      setUser(foundUser);\n      localStorage.setItem('newformat_user', JSON.stringify(foundUser));\n      setIsLoading(false);\n      return true;\n    }\n    setIsLoading(false);\n    return false;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('newformat_user');\n  };\n  const hasRole = role => {\n    return (user === null || user === void 0 ? void 0 : user.role) === role;\n  };\n  const hasAnyRole = roles => {\n    return user ? roles.includes(user.role) : false;\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isLoading,\n    hasRole,\n    hasAnyRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth должен использоваться внутри AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","UserRole","jsxDEV","_jsxDEV","AuthContext","undefined","mockUsers","id","name","email","role","ADMIN","isActive","createdAt","Date","PROMOTER","locationId","phone","SUPPLIER","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","savedUser","localStorage","getItem","JSON","parse","error","console","removeItem","login","password","Promise","resolve","setTimeout","foundUser","find","u","setItem","stringify","logout","hasRole","hasAnyRole","roles","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/nikitaognev/Desktop/honey/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, UserRole } from '../types';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isLoading: boolean;\n  hasRole: (role: UserRole) => boolean;\n  hasAnyRole: (roles: UserRole[]) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Моковые данные для демонстрации\nconst mockUsers: User[] = [\n  {\n    id: '1',\n    name: 'Администратор',\n    email: 'admin@newformat.ru',\n    role: UserRole.ADMIN,\n    isActive: true,\n    createdAt: new Date(),\n  },\n  {\n    id: '2',\n    name: 'Мария Сидорова',\n    email: 'promoter@newformat.ru',\n    role: UserRole.PROMOTER,\n    locationId: 'loc1',\n    phone: '+7 999 765 43 21',\n    isActive: true,\n    createdAt: new Date(),\n  },\n  {\n    id: '3',\n    name: 'ООО Медовый Дом',\n    email: 'supplier@newformat.ru',\n    role: UserRole.SUPPLIER,\n    isActive: true,\n    createdAt: new Date(),\n  },\n];\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Проверяем сохраненную сессию\n    const savedUser = localStorage.getItem('newformat_user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Ошибка при загрузке пользователя:', error);\n        localStorage.removeItem('newformat_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setIsLoading(true);\n    \n    // Имитация задержки сети\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Простая проверка пароля (в реальном приложении будет API)\n    const foundUser = mockUsers.find(u => u.email === email);\n    \n    if (foundUser && password === '123456') { // Простой пароль для демо\n      setUser(foundUser);\n      localStorage.setItem('newformat_user', JSON.stringify(foundUser));\n      setIsLoading(false);\n      return true;\n    }\n    \n    setIsLoading(false);\n    return false;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('newformat_user');\n  };\n\n  const hasRole = (role: UserRole): boolean => {\n    return user?.role === role;\n  };\n\n  const hasAnyRole = (roles: UserRole[]): boolean => {\n    return user ? roles.includes(user.role) : false;\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    logout,\n    isLoading,\n    hasRole,\n    hasAnyRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth должен использоваться внутри AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}